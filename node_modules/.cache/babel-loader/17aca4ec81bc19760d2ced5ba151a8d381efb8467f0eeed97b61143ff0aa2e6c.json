{"ast":null,"code":"/**\r\n * Access threads on AniList\r\n * @since 1.11.0\r\n * @memberof AniList\r\n */\nclass Thread {\n  /**\r\n   * @description This constructor is meant for internal use and is apart of initializing. You cannot access this\r\n   * through the AniList class and are not expect to.\r\n   * @param { Utilities } utilities - The AniList Utilities class.\r\n   * @hideconstructor\r\n   */\n  constructor(utilities) {\n    this.util = utilities;\n  }\n\n  /**\r\n   * Get a specific thread by its AniList ID\r\n   * @param {Number} id - The AniList ID of the thread\r\n   *\r\n   * @returns {ThreadEntry}\r\n   * @since 1.11.0\r\n   */\n  get(id) {\n    let queryVars = this.util.generateQueryHeaders(\"Thread\", id);\n    return this.util.send(`${queryVars[1]}\n\t\t\tid title body user { id name } replyCommentId\n\t\t\tviewCount isLocked isSticky isSubscribed replyUser { id name }\n\t\t\tisLiked repliedAt createdAt updatedAt\n\t\t\tlikes { id name } categories { id name }\n\t\t\tmediaCategories { id title { english native romaji userPreferred } type }\n\t  \t\t} }`, queryVars[0]).then(data => {\n      return data.Thread;\n    });\n  }\n\n  /**\r\n   * [Require Login] Delete a thread\r\n   * @param {Number} id - The AniList thread ID to delete\r\n   *\r\n   * @returns {Boolean} Returns true if successful\r\n   * @since 1.12.0\r\n   */\n  async delete(id) {\n    if (typeof id !== \"number\") {\n      throw new Error(\"ID is not a number type.\");\n    }\n    return this.util.send(`mutation ($id: Int) { DeleteThread(id: $id) { deleted } }`, {\n      id: id\n    }).then(data => {\n      return data.DeleteThread.deleted;\n    });\n  }\n\n  /**\r\n   * Get thread comments for a thread\r\n   * @param {Number} id - The AniList thread ID\r\n   * @param {Number} page - The page number\r\n   * @param {Number} perPage - How many entries per page\r\n   *\r\n   * @returns {ThreadComment[]}\r\n   * @since 1.12.0\r\n   */\n  getComments(id) {\n    let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let perPage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 25;\n    if (typeof id !== \"number\") {\n      throw new Error(\"ID is not a number type.\");\n    }\n    return this.util.send(`query ($threadID: Int, $page: Int, $perPage: Int) {\n\t\t\t\tPage(page:$page, perPage:$perPage) {\n\t\t\t\tthreadComments(threadId: $threadID) {\n\t\t\t   \t\tid user { id name } comment isLiked createdAt updatedAt\n\t\t\t   \t\tlikes { id name } childComments isLocked\n\t\t\t\t} } }`, {\n      threadID: id,\n      page: page,\n      perPage: perPage\n    }).then(data => {\n      return data.threadComments;\n    });\n  }\n}\nmodule.exports = Thread;","map":{"version":3,"names":["Thread","constructor","utilities","util","get","id","queryVars","generateQueryHeaders","send","then","data","delete","Error","DeleteThread","deleted","getComments","page","perPage","threadID","threadComments","module","exports"],"sources":["C:/Users/Ethan Liu/Desktop/repos/lightnovel-react/node_modules/anilist-node/lib/thread.js"],"sourcesContent":["/**\r\n * Access threads on AniList\r\n * @since 1.11.0\r\n * @memberof AniList\r\n */\r\nclass Thread {\r\n\t/**\r\n\t * @description This constructor is meant for internal use and is apart of initializing. You cannot access this\r\n\t * through the AniList class and are not expect to.\r\n\t * @param { Utilities } utilities - The AniList Utilities class.\r\n\t * @hideconstructor\r\n\t */\r\n\tconstructor(utilities) {\r\n\t\tthis.util = utilities;\r\n\t}\r\n\r\n\t/**\r\n\t * Get a specific thread by its AniList ID\r\n\t * @param {Number} id - The AniList ID of the thread\r\n\t *\r\n\t * @returns {ThreadEntry}\r\n\t * @since 1.11.0\r\n\t */\r\n\tget(id) {\r\n\t\tlet queryVars = this.util.generateQueryHeaders(\"Thread\", id);\r\n\r\n\t\treturn this.util\r\n\t\t\t.send(\r\n\t\t\t\t`${queryVars[1]}\r\n\t\t\tid title body user { id name } replyCommentId\r\n\t\t\tviewCount isLocked isSticky isSubscribed replyUser { id name }\r\n\t\t\tisLiked repliedAt createdAt updatedAt\r\n\t\t\tlikes { id name } categories { id name }\r\n\t\t\tmediaCategories { id title { english native romaji userPreferred } type }\r\n\t  \t\t} }`,\r\n\t\t\t\tqueryVars[0]\r\n\t\t\t)\r\n\t\t\t.then((data) => {\r\n\t\t\t\treturn data.Thread;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * [Require Login] Delete a thread\r\n\t * @param {Number} id - The AniList thread ID to delete\r\n\t *\r\n\t * @returns {Boolean} Returns true if successful\r\n\t * @since 1.12.0\r\n\t */\r\n\tasync delete(id) {\r\n\t\tif (typeof id !== \"number\") {\r\n\t\t\tthrow new Error(\"ID is not a number type.\");\r\n\t\t}\r\n\r\n\t\treturn this.util.send(`mutation ($id: Int) { DeleteThread(id: $id) { deleted } }`, { id: id }).then((data) => {\r\n\t\t\treturn data.DeleteThread.deleted;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get thread comments for a thread\r\n\t * @param {Number} id - The AniList thread ID\r\n\t * @param {Number} page - The page number\r\n\t * @param {Number} perPage - How many entries per page\r\n\t *\r\n\t * @returns {ThreadComment[]}\r\n\t * @since 1.12.0\r\n\t */\r\n\tgetComments(id, page = 1, perPage = 25) {\r\n\t\tif (typeof id !== \"number\") {\r\n\t\t\tthrow new Error(\"ID is not a number type.\");\r\n\t\t}\r\n\r\n\t\treturn this.util\r\n\t\t\t.send(\r\n\t\t\t\t`query ($threadID: Int, $page: Int, $perPage: Int) {\r\n\t\t\t\tPage(page:$page, perPage:$perPage) {\r\n\t\t\t\tthreadComments(threadId: $threadID) {\r\n\t\t\t   \t\tid user { id name } comment isLiked createdAt updatedAt\r\n\t\t\t   \t\tlikes { id name } childComments isLocked\r\n\t\t\t\t} } }`,\r\n\t\t\t\t{ threadID: id, page: page, perPage: perPage }\r\n\t\t\t)\r\n\t\t\t.then((data) => {\r\n\t\t\t\treturn data.threadComments;\r\n\t\t\t});\r\n\t}\r\n}\r\n\r\nmodule.exports = Thread;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,MAAMA,MAAM,CAAC;EACZ;AACD;AACA;AACA;AACA;AACA;EACCC,WAAW,CAACC,SAAS,EAAE;IACtB,IAAI,CAACC,IAAI,GAAGD,SAAS;EACtB;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACCE,GAAG,CAACC,EAAE,EAAE;IACP,IAAIC,SAAS,GAAG,IAAI,CAACH,IAAI,CAACI,oBAAoB,CAAC,QAAQ,EAAEF,EAAE,CAAC;IAE5D,OAAO,IAAI,CAACF,IAAI,CACdK,IAAI,CACH,GAAEF,SAAS,CAAC,CAAC,CAAE;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS,EACLA,SAAS,CAAC,CAAC,CAAC,CACZ,CACAG,IAAI,CAAEC,IAAI,IAAK;MACf,OAAOA,IAAI,CAACV,MAAM;IACnB,CAAC,CAAC;EACJ;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,MAAMW,MAAM,CAACN,EAAE,EAAE;IAChB,IAAI,OAAOA,EAAE,KAAK,QAAQ,EAAE;MAC3B,MAAM,IAAIO,KAAK,CAAC,0BAA0B,CAAC;IAC5C;IAEA,OAAO,IAAI,CAACT,IAAI,CAACK,IAAI,CAAE,2DAA0D,EAAE;MAAEH,EAAE,EAAEA;IAAG,CAAC,CAAC,CAACI,IAAI,CAAEC,IAAI,IAAK;MAC7G,OAAOA,IAAI,CAACG,YAAY,CAACC,OAAO;IACjC,CAAC,CAAC;EACH;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCC,WAAW,CAACV,EAAE,EAA0B;IAAA,IAAxBW,IAAI,uEAAG,CAAC;IAAA,IAAEC,OAAO,uEAAG,EAAE;IACrC,IAAI,OAAOZ,EAAE,KAAK,QAAQ,EAAE;MAC3B,MAAM,IAAIO,KAAK,CAAC,0BAA0B,CAAC;IAC5C;IAEA,OAAO,IAAI,CAACT,IAAI,CACdK,IAAI,CACH;AACL;AACA;AACA;AACA;AACA,UAAU,EACN;MAAEU,QAAQ,EAAEb,EAAE;MAAEW,IAAI,EAAEA,IAAI;MAAEC,OAAO,EAAEA;IAAQ,CAAC,CAC9C,CACAR,IAAI,CAAEC,IAAI,IAAK;MACf,OAAOA,IAAI,CAACS,cAAc;IAC3B,CAAC,CAAC;EACJ;AACD;AAEAC,MAAM,CAACC,OAAO,GAAGrB,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}