{"ast":null,"code":"module.exports = {\n  // Queries for AniList.User\n  UserProfileQuery: `id name about avatar { large medium } bannerImage isFollowing isFollower isBlocked \n        bans \n        options { \n            titleLanguage displayAdultContent airingNotifications profileColor \n            activityMergeTime staffNameLanguage notificationOptions { type enabled } \n        }\n        mediaListOptions { scoreFormat rowOrder \n            animeList { sectionOrder splitCompletedSectionByFormat customLists advancedScoring advancedScoringEnabled }\n            mangaList { sectionOrder splitCompletedSectionByFormat customLists advancedScoring advancedScoringEnabled } } \n        favourites {\n            anime { nodes { id title { romaji english native userPreferred } type } }\n            manga { nodes { id title { romaji english native userPreferred } type } }\n            characters { nodes { id name { english: full } } }\n            staff { nodes { id name { english: full } } }\n            studios { nodes { id name } } }\n        unreadNotificationCount siteUrl donatorTier donatorBadge moderatorRoles updatedAt`,\n  UserStatsQuery: `statistics { anime {\n            meanScore standardDeviation count minutesWatched episodesWatched\n            statuses { count meanScore minutesWatched status }\n            formats { count meanScore minutesWatched format }\n            lengths { count meanScore minutesWatched length }\n            releaseYears { count meanScore minutesWatched releaseYear }\n            startYears { count meanScore minutesWatched startYear }\n            genres { count meanScore minutesWatched genre }\n            tags { count meanScore minutesWatched tag { id name } }\n            countries { count meanScore minutesWatched country }\n            voiceActors { count meanScore minutesWatched voiceActor { id name { english: full } } }\n            staff { count meanScore minutesWatched staff { id name { english: full } } }\n            studios { count meanScore minutesWatched studio { id name } } }\n        manga {\n            meanScore standardDeviation count chaptersRead volumesRead\n            statuses { count meanScore chaptersRead status }\n            formats { count meanScore chaptersRead format }\n            lengths { count meanScore chaptersRead length }\n            releaseYears { count meanScore chaptersRead releaseYear }\n            startYears { count meanScore chaptersRead startYear }\n            genres { count meanScore chaptersRead genre }\n            tags { count meanScore chaptersRead tag { id name } }\n            countries { count meanScore chaptersRead country }\n            staff { count meanScore chaptersRead staff { id name { english: full } } } } }`,\n  UserUpdateQuery: `mutation (\n        $about: String, $titleLanguage: UserTitleLanguage, $displayAdultContent: Boolean,\n        $airingNotifications: Boolean, $scoreFormat: ScoreFormat, $rowOrder: String,\n        $profileColor: String, $donatorBadge: String, $notificationOptions: [NotificationOptionInput],\n        $timezone: String, $activityMergeTime: Int, $animeListOptions: MediaListOptionsInput,\n        $mangaListOptions: MediaListOptionsInput, $staffNameLanguage: UserStaffNameLanguage\n        ) {\n        UpdateUser(\n            about: $about, titleLanguage: $titleLanguage, displayAdultContent: $displayAdultContent,\n            airingNotifications: $airingNotifications, scoreFormat: $scoreFormat, rowOrder: $rowOrder,\n            profileColor: $profileColor, donatorBadge: $donatorBadge, notificationOptions: $notificationOptions,\n            timezone: $timezone, activityMergeTime: $activityMergeTime, animeListOptions: $animeListOptions,\n            mangaListOptions: $mangaListOptions, staffNameLanguage: $staffNameLanguage\n        ) {\n            about \n            options { \n                titleLanguage displayAdultContent airingNotifications profileColor \n                timezone activityMergeTime staffNameLanguage notificationOptions { type enabled } \n            }\n            mediaListOptions { scoreFormat rowOrder \n                animeList { sectionOrder splitCompletedSectionByFormat customLists advancedScoring advancedScoringEnabled }\n                mangaList { sectionOrder splitCompletedSectionByFormat customLists advancedScoring advancedScoringEnabled } }\n            donatorBadge\n        }\n    }`,\n  TextActivityQuery: `id user { id name } type text createdAt replies { id text likeCount }\n        isLocked isSubscribed isLiked likes { id name }`,\n  MessageActivityQuery: `id recipient { id name } type message createdAt replies { id text likeCount }\n        user:messenger { id name } isPrivate isLocked isSubscribed isLiked likes { id name }`,\n  ListActivityQuery: ` id user { id name } status type progress\n        media { id title { romaji english native userPreferred } type }\n        createdAt isLocked isSubscribed isLiked replies { id text likeCount } likes { id name }`\n};","map":{"version":3,"names":["module","exports","UserProfileQuery","UserStatsQuery","UserUpdateQuery","TextActivityQuery","MessageActivityQuery","ListActivityQuery"],"sources":["C:/Users/Ethan Liu/Desktop/repos/lightnovel-react/node_modules/anilist-node/lib/consts.js"],"sourcesContent":["module.exports = {\r\n\t// Queries for AniList.User\r\n\tUserProfileQuery: `id name about avatar { large medium } bannerImage isFollowing isFollower isBlocked \r\n        bans \r\n        options { \r\n            titleLanguage displayAdultContent airingNotifications profileColor \r\n            activityMergeTime staffNameLanguage notificationOptions { type enabled } \r\n        }\r\n        mediaListOptions { scoreFormat rowOrder \r\n            animeList { sectionOrder splitCompletedSectionByFormat customLists advancedScoring advancedScoringEnabled }\r\n            mangaList { sectionOrder splitCompletedSectionByFormat customLists advancedScoring advancedScoringEnabled } } \r\n        favourites {\r\n            anime { nodes { id title { romaji english native userPreferred } type } }\r\n            manga { nodes { id title { romaji english native userPreferred } type } }\r\n            characters { nodes { id name { english: full } } }\r\n            staff { nodes { id name { english: full } } }\r\n            studios { nodes { id name } } }\r\n        unreadNotificationCount siteUrl donatorTier donatorBadge moderatorRoles updatedAt`,\r\n\tUserStatsQuery: `statistics { anime {\r\n            meanScore standardDeviation count minutesWatched episodesWatched\r\n            statuses { count meanScore minutesWatched status }\r\n            formats { count meanScore minutesWatched format }\r\n            lengths { count meanScore minutesWatched length }\r\n            releaseYears { count meanScore minutesWatched releaseYear }\r\n            startYears { count meanScore minutesWatched startYear }\r\n            genres { count meanScore minutesWatched genre }\r\n            tags { count meanScore minutesWatched tag { id name } }\r\n            countries { count meanScore minutesWatched country }\r\n            voiceActors { count meanScore minutesWatched voiceActor { id name { english: full } } }\r\n            staff { count meanScore minutesWatched staff { id name { english: full } } }\r\n            studios { count meanScore minutesWatched studio { id name } } }\r\n        manga {\r\n            meanScore standardDeviation count chaptersRead volumesRead\r\n            statuses { count meanScore chaptersRead status }\r\n            formats { count meanScore chaptersRead format }\r\n            lengths { count meanScore chaptersRead length }\r\n            releaseYears { count meanScore chaptersRead releaseYear }\r\n            startYears { count meanScore chaptersRead startYear }\r\n            genres { count meanScore chaptersRead genre }\r\n            tags { count meanScore chaptersRead tag { id name } }\r\n            countries { count meanScore chaptersRead country }\r\n            staff { count meanScore chaptersRead staff { id name { english: full } } } } }`,\r\n\tUserUpdateQuery: `mutation (\r\n        $about: String, $titleLanguage: UserTitleLanguage, $displayAdultContent: Boolean,\r\n        $airingNotifications: Boolean, $scoreFormat: ScoreFormat, $rowOrder: String,\r\n        $profileColor: String, $donatorBadge: String, $notificationOptions: [NotificationOptionInput],\r\n        $timezone: String, $activityMergeTime: Int, $animeListOptions: MediaListOptionsInput,\r\n        $mangaListOptions: MediaListOptionsInput, $staffNameLanguage: UserStaffNameLanguage\r\n        ) {\r\n        UpdateUser(\r\n            about: $about, titleLanguage: $titleLanguage, displayAdultContent: $displayAdultContent,\r\n            airingNotifications: $airingNotifications, scoreFormat: $scoreFormat, rowOrder: $rowOrder,\r\n            profileColor: $profileColor, donatorBadge: $donatorBadge, notificationOptions: $notificationOptions,\r\n            timezone: $timezone, activityMergeTime: $activityMergeTime, animeListOptions: $animeListOptions,\r\n            mangaListOptions: $mangaListOptions, staffNameLanguage: $staffNameLanguage\r\n        ) {\r\n            about \r\n            options { \r\n                titleLanguage displayAdultContent airingNotifications profileColor \r\n                timezone activityMergeTime staffNameLanguage notificationOptions { type enabled } \r\n            }\r\n            mediaListOptions { scoreFormat rowOrder \r\n                animeList { sectionOrder splitCompletedSectionByFormat customLists advancedScoring advancedScoringEnabled }\r\n                mangaList { sectionOrder splitCompletedSectionByFormat customLists advancedScoring advancedScoringEnabled } }\r\n            donatorBadge\r\n        }\r\n    }`,\r\n\tTextActivityQuery: `id user { id name } type text createdAt replies { id text likeCount }\r\n        isLocked isSubscribed isLiked likes { id name }`,\r\n\tMessageActivityQuery: `id recipient { id name } type message createdAt replies { id text likeCount }\r\n        user:messenger { id name } isPrivate isLocked isSubscribed isLiked likes { id name }`,\r\n\tListActivityQuery: ` id user { id name } status type progress\r\n        media { id title { romaji english native userPreferred } type }\r\n        createdAt isLocked isSubscribed isLiked replies { id text likeCount } likes { id name }`\r\n};\r\n"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAG;EAChB;EACAC,gBAAgB,EAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F;EACzFC,cAAc,EAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F;EAC1FC,eAAe,EAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;EACLC,iBAAiB,EAAG;AACrB,wDAAwD;EACvDC,oBAAoB,EAAG;AACxB,6FAA6F;EAC5FC,iBAAiB,EAAG;AACrB;AACA;AACA,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}