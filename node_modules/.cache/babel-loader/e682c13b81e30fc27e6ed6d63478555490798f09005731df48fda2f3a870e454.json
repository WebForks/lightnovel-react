{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ethan Liu\\\\Desktop\\\\repos\\\\lightnovel-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport NovelWorld from \"./NovelWorld\";\nimport SearchIcon from \"./search.svg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\") {\n      searchLightNovels(searchTerm);\n    }\n  };\n  const [lightNovels, setLightNovels] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  let myFilter = {\n    format: \"NOVEL\"\n  };\n  const anilist = require('anilist-node');\n  const Anilist = new anilist();\n  let shows = [];\n  const searchLightNovels = title => {\n    const titles = String(title);\n    Anilist.searchEntry.manga(titles, myFilter).then(data => {\n      for (const i of data.media.map(item => item.id)) {\n        Anilist.media.manga(i).then(data => {\n          shows.push(data);\n        });\n      }\n      console.log(shows);\n    });\n    setLightNovels(shows);\n  };\n  useEffect(() => {\n    searchLightNovels(\"Re:Zero\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Nav-Bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-page-logo\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"home-page\",\n        children: \"Novel World\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"search-bar\",\n        placeholder: \"Search for Light novels..\",\n        value: searchTerm,\n        onChange: e => {\n          setSearchTerm(e.target.value);\n        },\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: SearchIcon,\n        alt: \"search-icon\",\n        onClick: () => searchLightNovels(searchTerm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }, this), (lightNovels === null || lightNovels === void 0 ? void 0 : lightNovels.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: lightNovels.map(lightNovel => /*#__PURE__*/_jsxDEV(NovelWorld, {\n        lightNovel: lightNovel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Light Novels not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"MxsjmXFms4IdToLI+4wNCvfLSuM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","NovelWorld","SearchIcon","App","handleKeyDown","event","key","searchLightNovels","searchTerm","lightNovels","setLightNovels","setSearchTerm","myFilter","format","anilist","require","Anilist","shows","title","titles","String","searchEntry","manga","then","data","i","media","map","item","id","push","console","log","e","target","value","length","lightNovel"],"sources":["C:/Users/Ethan Liu/Desktop/repos/lightnovel-react/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport NovelWorld from \"./NovelWorld\";\r\nimport SearchIcon from \"./search.svg\";\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n   const handleKeyDown = event => {\r\n      if (event.key === \"Enter\") {\r\n         searchLightNovels(searchTerm)\r\n      }\r\n   }\r\n\r\n   const [lightNovels, setLightNovels] = useState([]);\r\n   const [searchTerm, setSearchTerm] = useState('')\r\n\r\n   let myFilter = {\r\n      format: \"NOVEL\"\r\n   }\r\n\r\n\r\n\r\n   const anilist = require('anilist-node');\r\n   const Anilist = new anilist();\r\n\r\n   let shows = [];\r\n   const searchLightNovels = (title) => {\r\n      const titles = String(title);\r\n\r\n      Anilist.searchEntry.manga(titles, myFilter).then(data => {\r\n          for (const i of data.media.map(item => item.id)){\r\n            Anilist.media.manga(i).then(data => {\r\n               shows.push(data)\r\n              })\r\n          }\r\n          console.log(shows)\r\n      })\r\n   \r\n      setLightNovels(shows)\r\n   }\r\n\r\n\r\n   useEffect(() => {\r\n      searchLightNovels(\"Re:Zero\");\r\n   }, []);\r\n\r\n   return (\r\n      <div className='Nav-Bar'>\r\n         <div className='home-page-logo'>\r\n            <button id='home-page'>Novel World</button>\r\n         </div>\r\n      \r\n         <div className=\"search\">\r\n            <input id='search-bar'\r\n               placeholder=\"Search for Light novels..\"\r\n               value={searchTerm}\r\n               onChange={(e) => {setSearchTerm(e.target.value)}}\r\n               onKeyDown={handleKeyDown}\r\n            />\r\n            <img src={SearchIcon} alt=\"search-icon\" onClick={() => searchLightNovels(searchTerm)} />\r\n         </div>\r\n\r\n         {\r\n            lightNovels?.length > 0 \r\n            ? (\r\n               <div className=\"container\">\r\n                  {lightNovels.map((lightNovel) => (\r\n                  <NovelWorld lightNovel={lightNovel} />\r\n                  ))}\r\n               </div>\r\n            ) : (\r\n               <div className=\"empty\">\r\n                  <h2>Light Novels not found</h2>\r\n               </div>\r\n            )\r\n         }\r\n    </div>\r\n\r\n   );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}