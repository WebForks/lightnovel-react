{"ast":null,"code":"const fetch = require(\"node-fetch\");\n\n/**\r\n * Edit a person's name data object for better use.\r\n * @private\r\n * @param { Object } obj - A name object of the person.\r\n * @returns { Object } An edited object of the person.\r\n */\nfunction nameEditor(obj) {\n  if (obj.alternative.length < 1 || obj.alternative[0] === \"\") {\n    obj.alternative = null;\n  }\n  if (obj.full && obj.english === null) {\n    obj.english = obj.full;\n    delete obj.full;\n  }\n  return obj;\n}\n\n/**\r\n * Moves data up levels in the object for better use.\r\n * @private\r\n * @param { Object } obj - Required. The object to edit.\r\n * @returns { Object } Returns the edited object.\r\n */\nfunction edgeRemove(obj) {\n  let list = [];\n  for (let x = 0; x < obj.length; x++) {\n    if (obj[x].name) {\n      obj[x].name = obj[x].name.english || obj[x].name.full;\n    }\n    if (obj[x].node) {\n      list.push(obj[x].node);\n    } else if (obj[x].id && obj[x].length === 1) {\n      list.push(obj[x].id);\n    } else if (obj[x].url) {\n      list.push(obj[x].url);\n    } else {\n      list.push(obj[x]);\n    }\n  }\n  if (list.length < 1) {\n    list = null;\n  }\n  return list;\n}\n\n/**\r\n * Converts a fuzzyDate into a Javascript Date\r\n * @private\r\n * @param { fuzzyDate } fuzzyDate - Date provided by AniList's API.\r\n * @returns { Date } Returns a date object of the data provided.\r\n */\nfunction convertFuzzyDate(fuzzyDate) {\n  if (Object.values(fuzzyDate).some(d => d === null)) return null;\n  return new Date(fuzzyDate.year, fuzzyDate.month - 1, fuzzyDate.day);\n}\n\n/**\r\n * Formats the media data to read better.\r\n * @private\r\n * @param { Object } media\r\n */\nfunction formatMedia(media) {\n  media.reviews = media.reviews.nodes.length === 0 ? null : media.reviews.nodes;\n  media.externalLinks = edgeRemove(media.externalLinks);\n  media.characters = edgeRemove(media.characters.nodes);\n  media.staff = edgeRemove(media.staff.nodes);\n  if (media.airingSchedule) {\n    media.airingSchedule = media.airingSchedule.nodes;\n  }\n  if (media.studios) {\n    media.studios = media.studios.nodes;\n  }\n  media.recommendations = media.recommendations.nodes;\n  media.relations = media.relations.nodes;\n  media.trends = media.trends.nodes;\n  if (media.synonyms.length < 1) {\n    media.synonyms = null;\n  }\n  if (media.trailer) {\n    switch (media.trailer.site) {\n      case \"youtube\":\n        media.trailer = `https://www.youtube.com/watch?v=${media.trailer.id}`;\n        break;\n      case \"dailymotion\":\n        media.trailer = `https://www.dailymotion.com/video/${media.trailer.id}`;\n        break;\n      case undefined:\n        media.trailer = null;\n        break;\n      default:\n        break;\n    }\n  }\n  return media;\n}\nmodule.exports = {\n  /**\r\n   * Send a call to the AniList API with a query and variables.\r\n   * @param { String } query\r\n   * @param { Object } variables\r\n   * @returns { Object } Returns a customized object containing all of the data fetched.\r\n   */\n  send: async function (query, variables) {\n    if (!query) {\n      throw new Error(\"Query is not given!\");\n    }\n    if (query.startsWith(\"mutation\") && this.key === null) {\n      throw new Error(\"Function requires authenciation but no authorization found.\");\n    }\n    const controller = new AbortController();\n    const requestTimeout = setTimeout(() => {\n      controller.abort();\n    }, this.options.timeout);\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      signal: controller.signal\n    };\n    if (this.key) {\n      options.headers.Authorization = `Bearer ${this.key}`;\n    }\n    if (variables) {\n      options.body = JSON.stringify({\n        query: query,\n        variables: variables\n      });\n    } else {\n      options.body = JSON.stringify({\n        query: query\n      });\n    }\n    const response = await fetch(\"https://graphql.anilist.co\", options).catch(error => {\n      if (error.name === \"AbortError\") {\n        throw new Error(`ERROR: Request timed out after ${this.options.timeout}ms, is AniList up?`);\n      }\n    }).finally(() => {\n      clearTimeout(requestTimeout);\n    });\n    let json;\n    try {\n      json = await response.json();\n    } catch (err) {\n      throw Error(err);\n    }\n    if (Object.keys(json).length < 0) {\n      throw new Error(\"ERROR: AniList API is down. Please refer to official channels for more information.\");\n    }\n    if (json.errors) {\n      return json.errors;\n    }\n    if (json.data.Media) {\n      return formatMedia(json.data.Media);\n    }\n    if (json.data.Character) {\n      json.data.Character.name = nameEditor(json.data.Character.name);\n      json.data.Character.media = json.data.Character.media.nodes;\n      return json.data.Character;\n    }\n    if (json.data.Staff) {\n      json.data.Staff.name = nameEditor(json.data.Staff.name);\n      json.data.Staff.staffMedia = edgeRemove(json.data.Staff.staffMedia.nodes);\n      json.data.Staff.characters = edgeRemove(json.data.Staff.characters.nodes);\n      if (json.data.Staff.description.length < 1) {\n        json.data.Staff.description = null;\n      }\n      return json.data.Staff;\n    }\n    if (json.data.Page) {\n      if (json.data.Page.activities) {\n        // For list of recent activities with getRecentActivity.\n        return json.data.Page.activities;\n      }\n      if (json.data.Recommendation) {\n        // For recommendation lists.\n        json.data.Recommendation.recommendations = json.data.Page.recommendations;\n        return json.data.Recommendation;\n      }\n      return json.data.Page; // For general searching\n    }\n\n    if (json.data.Studio) {\n      json.data.Studio.media = edgeRemove(json.data.Studio.media.nodes);\n      return json.data.Studio;\n    }\n    if (json.data.User || json.data.Viewer) {\n      let userObj = json.data.User || json.data.Viewer;\n      if (userObj.statistics) {\n        //Move all names up a level.\n        userObj.statistics.anime.staff.forEach(e => {\n          e.staff.name = e.staff.name.english;\n        });\n        userObj.statistics.anime.voiceActors.forEach(e => {\n          e.voiceActor.name = e.voiceActor.name.english;\n        });\n        userObj.statistics.manga.staff.forEach(e => {\n          e.staff.name = e.staff.name.english;\n        });\n      }\n      if (userObj.statistics && !userObj.avatar) {\n        return userObj.statistics;\n      }\n\n      //Move all node objects up one level.\n      userObj.favourites.anime = userObj.favourites.anime.nodes;\n      userObj.favourites.manga = userObj.favourites.manga.nodes;\n      userObj.favourites.characters = edgeRemove(userObj.favourites.characters.nodes);\n      userObj.favourites.staff = edgeRemove(userObj.favourites.staff.nodes);\n      userObj.favourites.studios = userObj.favourites.studios.nodes;\n      return userObj;\n    }\n    if (json.data.MediaListCollection) {\n      json.data.MediaListCollection.lists.forEach(list => {\n        list.entries.map(entry => {\n          //Media does not need to be formatted in a list query.\n          entry.dates = {\n            startedAt: convertFuzzyDate(entry.startedAt),\n            completedAt: convertFuzzyDate(entry.completedAt),\n            updatedAt: new Date(entry.updatedAt * 1000),\n            createdAt: entry.createdAt === 0 ? null : new Date(entry.createdAt * 1000)\n          };\n          [\"startedAt\", \"completedAt\", \"updatedAt\", \"createdAt\"].forEach(e => delete entry[e]);\n        });\n      });\n      return json.data.MediaListCollection.lists;\n    }\n    return json.data; //If nothing matches, return collected data\n  }\n};","map":{"version":3,"names":["fetch","require","nameEditor","obj","alternative","length","full","english","edgeRemove","list","x","name","node","push","id","url","convertFuzzyDate","fuzzyDate","Object","values","some","d","Date","year","month","day","formatMedia","media","reviews","nodes","externalLinks","characters","staff","airingSchedule","studios","recommendations","relations","trends","synonyms","trailer","site","undefined","module","exports","send","query","variables","Error","startsWith","key","controller","AbortController","requestTimeout","setTimeout","abort","options","timeout","method","headers","Accept","signal","Authorization","body","JSON","stringify","response","catch","error","finally","clearTimeout","json","err","keys","errors","data","Media","Character","Staff","staffMedia","description","Page","activities","Recommendation","Studio","User","Viewer","userObj","statistics","anime","forEach","e","voiceActors","voiceActor","manga","avatar","favourites","MediaListCollection","lists","entries","map","entry","dates","startedAt","completedAt","updatedAt","createdAt"],"sources":["C:/Users/Ethan Liu/Desktop/repos/lightnovel-react/node_modules/anilist-node/lib/fetcher.js"],"sourcesContent":["const fetch = require(\"node-fetch\");\r\n\r\n/**\r\n * Edit a person's name data object for better use.\r\n * @private\r\n * @param { Object } obj - A name object of the person.\r\n * @returns { Object } An edited object of the person.\r\n */\r\nfunction nameEditor(obj) {\r\n\tif (obj.alternative.length < 1 || obj.alternative[0] === \"\") {\r\n\t\tobj.alternative = null;\r\n\t}\r\n\r\n\tif (obj.full && obj.english === null) {\r\n\t\tobj.english = obj.full;\r\n\t\tdelete obj.full;\r\n\t}\r\n\r\n\treturn obj;\r\n}\r\n\r\n/**\r\n * Moves data up levels in the object for better use.\r\n * @private\r\n * @param { Object } obj - Required. The object to edit.\r\n * @returns { Object } Returns the edited object.\r\n */\r\nfunction edgeRemove(obj) {\r\n\tlet list = [];\r\n\tfor (let x = 0; x < obj.length; x++) {\r\n\t\tif (obj[x].name) {\r\n\t\t\tobj[x].name = obj[x].name.english || obj[x].name.full;\r\n\t\t}\r\n\r\n\t\tif (obj[x].node) {\r\n\t\t\tlist.push(obj[x].node);\r\n\t\t} else if (obj[x].id && obj[x].length === 1) {\r\n\t\t\tlist.push(obj[x].id);\r\n\t\t} else if (obj[x].url) {\r\n\t\t\tlist.push(obj[x].url);\r\n\t\t} else {\r\n\t\t\tlist.push(obj[x]);\r\n\t\t}\r\n\t}\r\n\r\n\tif (list.length < 1) {\r\n\t\tlist = null;\r\n\t}\r\n\treturn list;\r\n}\r\n\r\n/**\r\n * Converts a fuzzyDate into a Javascript Date\r\n * @private\r\n * @param { fuzzyDate } fuzzyDate - Date provided by AniList's API.\r\n * @returns { Date } Returns a date object of the data provided.\r\n */\r\nfunction convertFuzzyDate(fuzzyDate) {\r\n\tif (Object.values(fuzzyDate).some((d) => d === null)) return null;\r\n\treturn new Date(fuzzyDate.year, fuzzyDate.month - 1, fuzzyDate.day);\r\n}\r\n\r\n/**\r\n * Formats the media data to read better.\r\n * @private\r\n * @param { Object } media\r\n */\r\nfunction formatMedia(media) {\r\n\tmedia.reviews = media.reviews.nodes.length === 0 ? null : media.reviews.nodes;\r\n\r\n\tmedia.externalLinks = edgeRemove(media.externalLinks);\r\n\tmedia.characters = edgeRemove(media.characters.nodes);\r\n\tmedia.staff = edgeRemove(media.staff.nodes);\r\n\r\n\tif (media.airingSchedule) {\r\n\t\tmedia.airingSchedule = media.airingSchedule.nodes;\r\n\t}\r\n\tif (media.studios) {\r\n\t\tmedia.studios = media.studios.nodes;\r\n\t}\r\n\tmedia.recommendations = media.recommendations.nodes;\r\n\tmedia.relations = media.relations.nodes;\r\n\tmedia.trends = media.trends.nodes;\r\n\r\n\tif (media.synonyms.length < 1) {\r\n\t\tmedia.synonyms = null;\r\n\t}\r\n\r\n\tif (media.trailer) {\r\n\t\tswitch (media.trailer.site) {\r\n\t\t\tcase \"youtube\":\r\n\t\t\t\tmedia.trailer = `https://www.youtube.com/watch?v=${media.trailer.id}`;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"dailymotion\":\r\n\t\t\t\tmedia.trailer = `https://www.dailymotion.com/video/${media.trailer.id}`;\r\n\t\t\t\tbreak;\r\n\t\t\tcase undefined:\r\n\t\t\t\tmedia.trailer = null;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\treturn media;\r\n}\r\n\r\nmodule.exports = {\r\n\t/**\r\n\t * Send a call to the AniList API with a query and variables.\r\n\t * @param { String } query\r\n\t * @param { Object } variables\r\n\t * @returns { Object } Returns a customized object containing all of the data fetched.\r\n\t */\r\n\tsend: async function (query, variables) {\r\n\t\tif (!query) {\r\n\t\t\tthrow new Error(\"Query is not given!\");\r\n\t\t}\r\n\r\n\t\tif (query.startsWith(\"mutation\") && this.key === null) {\r\n\t\t\tthrow new Error(\"Function requires authenciation but no authorization found.\");\r\n\t\t}\r\n\r\n\t\tconst controller = new AbortController();\r\n\t\tconst requestTimeout = setTimeout(() => {\r\n\t\t\tcontroller.abort();\r\n\t\t}, this.options.timeout);\r\n\r\n\t\tconst options = {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\tAccept: \"application/json\"\r\n\t\t\t},\r\n\t\t\tsignal: controller.signal\r\n\t\t};\r\n\t\tif (this.key) {\r\n\t\t\toptions.headers.Authorization = `Bearer ${this.key}`;\r\n\t\t}\r\n\t\tif (variables) {\r\n\t\t\toptions.body = JSON.stringify({ query: query, variables: variables });\r\n\t\t} else {\r\n\t\t\toptions.body = JSON.stringify({ query: query });\r\n\t\t}\r\n\r\n\t\tconst response = await fetch(\"https://graphql.anilist.co\", options)\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tif (error.name === \"AbortError\") {\r\n\t\t\t\t\tthrow new Error(`ERROR: Request timed out after ${this.options.timeout}ms, is AniList up?`);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tclearTimeout(requestTimeout);\r\n\t\t\t});\r\n\r\n\t\tlet json;\r\n\r\n\t\ttry {\r\n\t\t\tjson = await response.json();\r\n\t\t} catch (err) {\r\n\t\t\tthrow Error(err);\r\n\t\t}\r\n\r\n\t\tif (Object.keys(json).length < 0) {\r\n\t\t\tthrow new Error(\"ERROR: AniList API is down. Please refer to official channels for more information.\");\r\n\t\t}\r\n\r\n\t\tif (json.errors) {\r\n\t\t\treturn json.errors;\r\n\t\t}\r\n\r\n\t\tif (json.data.Media) {\r\n\t\t\treturn formatMedia(json.data.Media);\r\n\t\t}\r\n\r\n\t\tif (json.data.Character) {\r\n\t\t\tjson.data.Character.name = nameEditor(json.data.Character.name);\r\n\t\t\tjson.data.Character.media = json.data.Character.media.nodes;\r\n\t\t\treturn json.data.Character;\r\n\t\t}\r\n\r\n\t\tif (json.data.Staff) {\r\n\t\t\tjson.data.Staff.name = nameEditor(json.data.Staff.name);\r\n\t\t\tjson.data.Staff.staffMedia = edgeRemove(json.data.Staff.staffMedia.nodes);\r\n\t\t\tjson.data.Staff.characters = edgeRemove(json.data.Staff.characters.nodes);\r\n\t\t\tif (json.data.Staff.description.length < 1) {\r\n\t\t\t\tjson.data.Staff.description = null;\r\n\t\t\t}\r\n\t\t\treturn json.data.Staff;\r\n\t\t}\r\n\r\n\t\tif (json.data.Page) {\r\n\t\t\tif (json.data.Page.activities) {\r\n\t\t\t\t// For list of recent activities with getRecentActivity.\r\n\t\t\t\treturn json.data.Page.activities;\r\n\t\t\t}\r\n\t\t\tif (json.data.Recommendation) {\r\n\t\t\t\t// For recommendation lists.\r\n\t\t\t\tjson.data.Recommendation.recommendations = json.data.Page.recommendations;\r\n\t\t\t\treturn json.data.Recommendation;\r\n\t\t\t}\r\n\t\t\treturn json.data.Page; // For general searching\r\n\t\t}\r\n\r\n\t\tif (json.data.Studio) {\r\n\t\t\tjson.data.Studio.media = edgeRemove(json.data.Studio.media.nodes);\r\n\t\t\treturn json.data.Studio;\r\n\t\t}\r\n\r\n\t\tif (json.data.User || json.data.Viewer) {\r\n\t\t\tlet userObj = json.data.User || json.data.Viewer;\r\n\t\t\tif (userObj.statistics) {\r\n\t\t\t\t//Move all names up a level.\r\n\t\t\t\tuserObj.statistics.anime.staff.forEach((e) => {\r\n\t\t\t\t\te.staff.name = e.staff.name.english;\r\n\t\t\t\t});\r\n\t\t\t\tuserObj.statistics.anime.voiceActors.forEach((e) => {\r\n\t\t\t\t\te.voiceActor.name = e.voiceActor.name.english;\r\n\t\t\t\t});\r\n\t\t\t\tuserObj.statistics.manga.staff.forEach((e) => {\r\n\t\t\t\t\te.staff.name = e.staff.name.english;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (userObj.statistics && !userObj.avatar) {\r\n\t\t\t\treturn userObj.statistics;\r\n\t\t\t}\r\n\r\n\t\t\t//Move all node objects up one level.\r\n\t\t\tuserObj.favourites.anime = userObj.favourites.anime.nodes;\r\n\t\t\tuserObj.favourites.manga = userObj.favourites.manga.nodes;\r\n\t\t\tuserObj.favourites.characters = edgeRemove(userObj.favourites.characters.nodes);\r\n\t\t\tuserObj.favourites.staff = edgeRemove(userObj.favourites.staff.nodes);\r\n\t\t\tuserObj.favourites.studios = userObj.favourites.studios.nodes;\r\n\r\n\t\t\treturn userObj;\r\n\t\t}\r\n\r\n\t\tif (json.data.MediaListCollection) {\r\n\t\t\tjson.data.MediaListCollection.lists.forEach((list) => {\r\n\t\t\t\tlist.entries.map((entry) => {\r\n\t\t\t\t\t//Media does not need to be formatted in a list query.\r\n\t\t\t\t\tentry.dates = {\r\n\t\t\t\t\t\tstartedAt: convertFuzzyDate(entry.startedAt),\r\n\t\t\t\t\t\tcompletedAt: convertFuzzyDate(entry.completedAt),\r\n\t\t\t\t\t\tupdatedAt: new Date(entry.updatedAt * 1000),\r\n\t\t\t\t\t\tcreatedAt: entry.createdAt === 0 ? null : new Date(entry.createdAt * 1000)\r\n\t\t\t\t\t};\r\n\t\t\t\t\t[\"startedAt\", \"completedAt\", \"updatedAt\", \"createdAt\"].forEach((e) => delete entry[e]);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn json.data.MediaListCollection.lists;\r\n\t\t}\r\n\r\n\t\treturn json.data; //If nothing matches, return collected data\r\n\t}\r\n};\r\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,YAAY,CAAC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,UAAU,CAACC,GAAG,EAAE;EACxB,IAAIA,GAAG,CAACC,WAAW,CAACC,MAAM,GAAG,CAAC,IAAIF,GAAG,CAACC,WAAW,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;IAC5DD,GAAG,CAACC,WAAW,GAAG,IAAI;EACvB;EAEA,IAAID,GAAG,CAACG,IAAI,IAAIH,GAAG,CAACI,OAAO,KAAK,IAAI,EAAE;IACrCJ,GAAG,CAACI,OAAO,GAAGJ,GAAG,CAACG,IAAI;IACtB,OAAOH,GAAG,CAACG,IAAI;EAChB;EAEA,OAAOH,GAAG;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASK,UAAU,CAACL,GAAG,EAAE;EACxB,IAAIM,IAAI,GAAG,EAAE;EACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,GAAG,CAACE,MAAM,EAAEK,CAAC,EAAE,EAAE;IACpC,IAAIP,GAAG,CAACO,CAAC,CAAC,CAACC,IAAI,EAAE;MAChBR,GAAG,CAACO,CAAC,CAAC,CAACC,IAAI,GAAGR,GAAG,CAACO,CAAC,CAAC,CAACC,IAAI,CAACJ,OAAO,IAAIJ,GAAG,CAACO,CAAC,CAAC,CAACC,IAAI,CAACL,IAAI;IACtD;IAEA,IAAIH,GAAG,CAACO,CAAC,CAAC,CAACE,IAAI,EAAE;MAChBH,IAAI,CAACI,IAAI,CAACV,GAAG,CAACO,CAAC,CAAC,CAACE,IAAI,CAAC;IACvB,CAAC,MAAM,IAAIT,GAAG,CAACO,CAAC,CAAC,CAACI,EAAE,IAAIX,GAAG,CAACO,CAAC,CAAC,CAACL,MAAM,KAAK,CAAC,EAAE;MAC5CI,IAAI,CAACI,IAAI,CAACV,GAAG,CAACO,CAAC,CAAC,CAACI,EAAE,CAAC;IACrB,CAAC,MAAM,IAAIX,GAAG,CAACO,CAAC,CAAC,CAACK,GAAG,EAAE;MACtBN,IAAI,CAACI,IAAI,CAACV,GAAG,CAACO,CAAC,CAAC,CAACK,GAAG,CAAC;IACtB,CAAC,MAAM;MACNN,IAAI,CAACI,IAAI,CAACV,GAAG,CAACO,CAAC,CAAC,CAAC;IAClB;EACD;EAEA,IAAID,IAAI,CAACJ,MAAM,GAAG,CAAC,EAAE;IACpBI,IAAI,GAAG,IAAI;EACZ;EACA,OAAOA,IAAI;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASO,gBAAgB,CAACC,SAAS,EAAE;EACpC,IAAIC,MAAM,CAACC,MAAM,CAACF,SAAS,CAAC,CAACG,IAAI,CAAEC,CAAC,IAAKA,CAAC,KAAK,IAAI,CAAC,EAAE,OAAO,IAAI;EACjE,OAAO,IAAIC,IAAI,CAACL,SAAS,CAACM,IAAI,EAAEN,SAAS,CAACO,KAAK,GAAG,CAAC,EAAEP,SAAS,CAACQ,GAAG,CAAC;AACpE;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASC,WAAW,CAACC,KAAK,EAAE;EAC3BA,KAAK,CAACC,OAAO,GAAGD,KAAK,CAACC,OAAO,CAACC,KAAK,CAACxB,MAAM,KAAK,CAAC,GAAG,IAAI,GAAGsB,KAAK,CAACC,OAAO,CAACC,KAAK;EAE7EF,KAAK,CAACG,aAAa,GAAGtB,UAAU,CAACmB,KAAK,CAACG,aAAa,CAAC;EACrDH,KAAK,CAACI,UAAU,GAAGvB,UAAU,CAACmB,KAAK,CAACI,UAAU,CAACF,KAAK,CAAC;EACrDF,KAAK,CAACK,KAAK,GAAGxB,UAAU,CAACmB,KAAK,CAACK,KAAK,CAACH,KAAK,CAAC;EAE3C,IAAIF,KAAK,CAACM,cAAc,EAAE;IACzBN,KAAK,CAACM,cAAc,GAAGN,KAAK,CAACM,cAAc,CAACJ,KAAK;EAClD;EACA,IAAIF,KAAK,CAACO,OAAO,EAAE;IAClBP,KAAK,CAACO,OAAO,GAAGP,KAAK,CAACO,OAAO,CAACL,KAAK;EACpC;EACAF,KAAK,CAACQ,eAAe,GAAGR,KAAK,CAACQ,eAAe,CAACN,KAAK;EACnDF,KAAK,CAACS,SAAS,GAAGT,KAAK,CAACS,SAAS,CAACP,KAAK;EACvCF,KAAK,CAACU,MAAM,GAAGV,KAAK,CAACU,MAAM,CAACR,KAAK;EAEjC,IAAIF,KAAK,CAACW,QAAQ,CAACjC,MAAM,GAAG,CAAC,EAAE;IAC9BsB,KAAK,CAACW,QAAQ,GAAG,IAAI;EACtB;EAEA,IAAIX,KAAK,CAACY,OAAO,EAAE;IAClB,QAAQZ,KAAK,CAACY,OAAO,CAACC,IAAI;MACzB,KAAK,SAAS;QACbb,KAAK,CAACY,OAAO,GAAI,mCAAkCZ,KAAK,CAACY,OAAO,CAACzB,EAAG,EAAC;QACrE;MACD,KAAK,aAAa;QACjBa,KAAK,CAACY,OAAO,GAAI,qCAAoCZ,KAAK,CAACY,OAAO,CAACzB,EAAG,EAAC;QACvE;MACD,KAAK2B,SAAS;QACbd,KAAK,CAACY,OAAO,GAAG,IAAI;QACpB;MACD;QACC;IAAM;EAET;EACA,OAAOZ,KAAK;AACb;AAEAe,MAAM,CAACC,OAAO,GAAG;EAChB;AACD;AACA;AACA;AACA;AACA;EACCC,IAAI,EAAE,gBAAgBC,KAAK,EAAEC,SAAS,EAAE;IACvC,IAAI,CAACD,KAAK,EAAE;MACX,MAAM,IAAIE,KAAK,CAAC,qBAAqB,CAAC;IACvC;IAEA,IAAIF,KAAK,CAACG,UAAU,CAAC,UAAU,CAAC,IAAI,IAAI,CAACC,GAAG,KAAK,IAAI,EAAE;MACtD,MAAM,IAAIF,KAAK,CAAC,6DAA6D,CAAC;IAC/E;IAEA,MAAMG,UAAU,GAAG,IAAIC,eAAe,EAAE;IACxC,MAAMC,cAAc,GAAGC,UAAU,CAAC,MAAM;MACvCH,UAAU,CAACI,KAAK,EAAE;IACnB,CAAC,EAAE,IAAI,CAACC,OAAO,CAACC,OAAO,CAAC;IAExB,MAAMD,OAAO,GAAG;MACfE,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACR,cAAc,EAAE,kBAAkB;QAClCC,MAAM,EAAE;MACT,CAAC;MACDC,MAAM,EAAEV,UAAU,CAACU;IACpB,CAAC;IACD,IAAI,IAAI,CAACX,GAAG,EAAE;MACbM,OAAO,CAACG,OAAO,CAACG,aAAa,GAAI,UAAS,IAAI,CAACZ,GAAI,EAAC;IACrD;IACA,IAAIH,SAAS,EAAE;MACdS,OAAO,CAACO,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;QAAEnB,KAAK,EAAEA,KAAK;QAAEC,SAAS,EAAEA;MAAU,CAAC,CAAC;IACtE,CAAC,MAAM;MACNS,OAAO,CAACO,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;QAAEnB,KAAK,EAAEA;MAAM,CAAC,CAAC;IAChD;IAEA,MAAMoB,QAAQ,GAAG,MAAMjE,KAAK,CAAC,4BAA4B,EAAEuD,OAAO,CAAC,CACjEW,KAAK,CAAEC,KAAK,IAAK;MACjB,IAAIA,KAAK,CAACxD,IAAI,KAAK,YAAY,EAAE;QAChC,MAAM,IAAIoC,KAAK,CAAE,kCAAiC,IAAI,CAACQ,OAAO,CAACC,OAAQ,oBAAmB,CAAC;MAC5F;IACD,CAAC,CAAC,CACDY,OAAO,CAAC,MAAM;MACdC,YAAY,CAACjB,cAAc,CAAC;IAC7B,CAAC,CAAC;IAEH,IAAIkB,IAAI;IAER,IAAI;MACHA,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAI,EAAE;IAC7B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACb,MAAMxB,KAAK,CAACwB,GAAG,CAAC;IACjB;IAEA,IAAIrD,MAAM,CAACsD,IAAI,CAACF,IAAI,CAAC,CAACjE,MAAM,GAAG,CAAC,EAAE;MACjC,MAAM,IAAI0C,KAAK,CAAC,qFAAqF,CAAC;IACvG;IAEA,IAAIuB,IAAI,CAACG,MAAM,EAAE;MAChB,OAAOH,IAAI,CAACG,MAAM;IACnB;IAEA,IAAIH,IAAI,CAACI,IAAI,CAACC,KAAK,EAAE;MACpB,OAAOjD,WAAW,CAAC4C,IAAI,CAACI,IAAI,CAACC,KAAK,CAAC;IACpC;IAEA,IAAIL,IAAI,CAACI,IAAI,CAACE,SAAS,EAAE;MACxBN,IAAI,CAACI,IAAI,CAACE,SAAS,CAACjE,IAAI,GAAGT,UAAU,CAACoE,IAAI,CAACI,IAAI,CAACE,SAAS,CAACjE,IAAI,CAAC;MAC/D2D,IAAI,CAACI,IAAI,CAACE,SAAS,CAACjD,KAAK,GAAG2C,IAAI,CAACI,IAAI,CAACE,SAAS,CAACjD,KAAK,CAACE,KAAK;MAC3D,OAAOyC,IAAI,CAACI,IAAI,CAACE,SAAS;IAC3B;IAEA,IAAIN,IAAI,CAACI,IAAI,CAACG,KAAK,EAAE;MACpBP,IAAI,CAACI,IAAI,CAACG,KAAK,CAAClE,IAAI,GAAGT,UAAU,CAACoE,IAAI,CAACI,IAAI,CAACG,KAAK,CAAClE,IAAI,CAAC;MACvD2D,IAAI,CAACI,IAAI,CAACG,KAAK,CAACC,UAAU,GAAGtE,UAAU,CAAC8D,IAAI,CAACI,IAAI,CAACG,KAAK,CAACC,UAAU,CAACjD,KAAK,CAAC;MACzEyC,IAAI,CAACI,IAAI,CAACG,KAAK,CAAC9C,UAAU,GAAGvB,UAAU,CAAC8D,IAAI,CAACI,IAAI,CAACG,KAAK,CAAC9C,UAAU,CAACF,KAAK,CAAC;MACzE,IAAIyC,IAAI,CAACI,IAAI,CAACG,KAAK,CAACE,WAAW,CAAC1E,MAAM,GAAG,CAAC,EAAE;QAC3CiE,IAAI,CAACI,IAAI,CAACG,KAAK,CAACE,WAAW,GAAG,IAAI;MACnC;MACA,OAAOT,IAAI,CAACI,IAAI,CAACG,KAAK;IACvB;IAEA,IAAIP,IAAI,CAACI,IAAI,CAACM,IAAI,EAAE;MACnB,IAAIV,IAAI,CAACI,IAAI,CAACM,IAAI,CAACC,UAAU,EAAE;QAC9B;QACA,OAAOX,IAAI,CAACI,IAAI,CAACM,IAAI,CAACC,UAAU;MACjC;MACA,IAAIX,IAAI,CAACI,IAAI,CAACQ,cAAc,EAAE;QAC7B;QACAZ,IAAI,CAACI,IAAI,CAACQ,cAAc,CAAC/C,eAAe,GAAGmC,IAAI,CAACI,IAAI,CAACM,IAAI,CAAC7C,eAAe;QACzE,OAAOmC,IAAI,CAACI,IAAI,CAACQ,cAAc;MAChC;MACA,OAAOZ,IAAI,CAACI,IAAI,CAACM,IAAI,CAAC,CAAC;IACxB;;IAEA,IAAIV,IAAI,CAACI,IAAI,CAACS,MAAM,EAAE;MACrBb,IAAI,CAACI,IAAI,CAACS,MAAM,CAACxD,KAAK,GAAGnB,UAAU,CAAC8D,IAAI,CAACI,IAAI,CAACS,MAAM,CAACxD,KAAK,CAACE,KAAK,CAAC;MACjE,OAAOyC,IAAI,CAACI,IAAI,CAACS,MAAM;IACxB;IAEA,IAAIb,IAAI,CAACI,IAAI,CAACU,IAAI,IAAId,IAAI,CAACI,IAAI,CAACW,MAAM,EAAE;MACvC,IAAIC,OAAO,GAAGhB,IAAI,CAACI,IAAI,CAACU,IAAI,IAAId,IAAI,CAACI,IAAI,CAACW,MAAM;MAChD,IAAIC,OAAO,CAACC,UAAU,EAAE;QACvB;QACAD,OAAO,CAACC,UAAU,CAACC,KAAK,CAACxD,KAAK,CAACyD,OAAO,CAAEC,CAAC,IAAK;UAC7CA,CAAC,CAAC1D,KAAK,CAACrB,IAAI,GAAG+E,CAAC,CAAC1D,KAAK,CAACrB,IAAI,CAACJ,OAAO;QACpC,CAAC,CAAC;QACF+E,OAAO,CAACC,UAAU,CAACC,KAAK,CAACG,WAAW,CAACF,OAAO,CAAEC,CAAC,IAAK;UACnDA,CAAC,CAACE,UAAU,CAACjF,IAAI,GAAG+E,CAAC,CAACE,UAAU,CAACjF,IAAI,CAACJ,OAAO;QAC9C,CAAC,CAAC;QACF+E,OAAO,CAACC,UAAU,CAACM,KAAK,CAAC7D,KAAK,CAACyD,OAAO,CAAEC,CAAC,IAAK;UAC7CA,CAAC,CAAC1D,KAAK,CAACrB,IAAI,GAAG+E,CAAC,CAAC1D,KAAK,CAACrB,IAAI,CAACJ,OAAO;QACpC,CAAC,CAAC;MACH;MAEA,IAAI+E,OAAO,CAACC,UAAU,IAAI,CAACD,OAAO,CAACQ,MAAM,EAAE;QAC1C,OAAOR,OAAO,CAACC,UAAU;MAC1B;;MAEA;MACAD,OAAO,CAACS,UAAU,CAACP,KAAK,GAAGF,OAAO,CAACS,UAAU,CAACP,KAAK,CAAC3D,KAAK;MACzDyD,OAAO,CAACS,UAAU,CAACF,KAAK,GAAGP,OAAO,CAACS,UAAU,CAACF,KAAK,CAAChE,KAAK;MACzDyD,OAAO,CAACS,UAAU,CAAChE,UAAU,GAAGvB,UAAU,CAAC8E,OAAO,CAACS,UAAU,CAAChE,UAAU,CAACF,KAAK,CAAC;MAC/EyD,OAAO,CAACS,UAAU,CAAC/D,KAAK,GAAGxB,UAAU,CAAC8E,OAAO,CAACS,UAAU,CAAC/D,KAAK,CAACH,KAAK,CAAC;MACrEyD,OAAO,CAACS,UAAU,CAAC7D,OAAO,GAAGoD,OAAO,CAACS,UAAU,CAAC7D,OAAO,CAACL,KAAK;MAE7D,OAAOyD,OAAO;IACf;IAEA,IAAIhB,IAAI,CAACI,IAAI,CAACsB,mBAAmB,EAAE;MAClC1B,IAAI,CAACI,IAAI,CAACsB,mBAAmB,CAACC,KAAK,CAACR,OAAO,CAAEhF,IAAI,IAAK;QACrDA,IAAI,CAACyF,OAAO,CAACC,GAAG,CAAEC,KAAK,IAAK;UAC3B;UACAA,KAAK,CAACC,KAAK,GAAG;YACbC,SAAS,EAAEtF,gBAAgB,CAACoF,KAAK,CAACE,SAAS,CAAC;YAC5CC,WAAW,EAAEvF,gBAAgB,CAACoF,KAAK,CAACG,WAAW,CAAC;YAChDC,SAAS,EAAE,IAAIlF,IAAI,CAAC8E,KAAK,CAACI,SAAS,GAAG,IAAI,CAAC;YAC3CC,SAAS,EAAEL,KAAK,CAACK,SAAS,KAAK,CAAC,GAAG,IAAI,GAAG,IAAInF,IAAI,CAAC8E,KAAK,CAACK,SAAS,GAAG,IAAI;UAC1E,CAAC;UACD,CAAC,WAAW,EAAE,aAAa,EAAE,WAAW,EAAE,WAAW,CAAC,CAAChB,OAAO,CAAEC,CAAC,IAAK,OAAOU,KAAK,CAACV,CAAC,CAAC,CAAC;QACvF,CAAC,CAAC;MACH,CAAC,CAAC;MACF,OAAOpB,IAAI,CAACI,IAAI,CAACsB,mBAAmB,CAACC,KAAK;IAC3C;IAEA,OAAO3B,IAAI,CAACI,IAAI,CAAC,CAAC;EACnB;AACD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}