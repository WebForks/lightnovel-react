{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ethan Liu\\\\Desktop\\\\repos\\\\lightnovel-react\\\\src\\\\LNPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport NovelInfo from \"./NovelInfo.jsx\";\nimport NovelFiles from \"./NovelFiles.jsx\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LNPage = () => {\n  _s();\n  const location = useLocation();\n  const id = parseInt(location.pathname.replace(/^\\D+/g, ''));\n  const anilist = require('anilist-node');\n  const Anilist = new anilist();\n  const [LnInfo, setLnInfo] = useState([]);\n  const [volumes, setvolumes] = useState([]);\n  const processData = async () => {\n    let info = [];\n    const data = await Anilist.media.manga(id);\n    info.push(data);\n    setLnInfo(info);\n  };\n  const fs = require('fs');\n  const folderPath = `C:\\\\Users\\\\Ethan Liu\\\\Desktop\\\\repos\\\\lightnovel-react\\\\novels\\\\${id}`;\n  const fileDirCount = async () => {\n    fs.readdir(folderPath, (err, files) => {\n      setvolumes(files.length);\n    });\n  };\n  console.log(LnInfo);\n  console.log(files.length);\n  useEffect(() => {\n    processData();\n    fileDirCount();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: LnInfo.map(lninfos => /*#__PURE__*/_jsxDEV(NovelInfo, {\n        lninfos: lninfos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: LnInfo.map(lninfos => /*#__PURE__*/_jsxDEV(NovelFiles, {\n        lninfos: lninfos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n_s(LNPage, \"uMsn+ojaIepA5ymaVDLH5mwdl1Q=\", false, function () {\n  return [useLocation];\n});\n_c = LNPage;\nexport default LNPage;\nvar _c;\n$RefreshReg$(_c, \"LNPage\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","NovelInfo","NovelFiles","LNPage","location","id","parseInt","pathname","replace","anilist","require","Anilist","LnInfo","setLnInfo","volumes","setvolumes","processData","info","data","media","manga","push","fs","folderPath","fileDirCount","readdir","err","files","length","console","log","map","lninfos"],"sources":["C:/Users/Ethan Liu/Desktop/repos/lightnovel-react/src/LNPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {useLocation} from 'react-router-dom';\r\nimport NovelInfo from \"./NovelInfo.jsx\";\r\nimport NovelFiles from \"./NovelFiles.jsx\";\r\n\r\n\r\nconst LNPage = () => {\r\n   const location = useLocation();\r\n   const id = parseInt(location.pathname.replace( /^\\D+/g, ''));\r\n   const anilist = require('anilist-node');\r\n   const Anilist = new anilist();\r\n\r\n\r\n   const [LnInfo, setLnInfo] = useState([]);\r\n   const [volumes, setvolumes] = useState([])\r\n\r\n   const processData = async () => {\r\n      let info = []\r\n      const data = await Anilist.media.manga(id);\r\n      info.push(data);\r\n      setLnInfo(info)\r\n    }\r\n\r\n   const fs = require('fs');\r\n   const folderPath = `C:\\\\Users\\\\Ethan Liu\\\\Desktop\\\\repos\\\\lightnovel-react\\\\novels\\\\${id}`;\r\n\r\n   const fileDirCount = async () => {\r\n      fs.readdir(folderPath, (err, files) => {\r\n         setvolumes(files.length);\r\n       });\r\n   }\r\n   \r\n   console.log(LnInfo)\r\n   console.log(files.length)\r\n\r\n   useEffect(() => {\r\n      processData();\r\n      fileDirCount();\r\n   }, []);\r\n\r\n   return (\r\n      <> \r\n         <div>\r\n            {LnInfo.map((lninfos) => (\r\n               <NovelInfo lninfos={lninfos} />\r\n            ))}\r\n         </div>\r\n\r\n         <div>\r\n            {LnInfo.map((lninfos) => (\r\n               <NovelFiles lninfos={lninfos} />\r\n            ))}\r\n         </div>\r\n      </>   \r\n\r\n   )\r\n}\r\n\r\nexport default LNPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,UAAU,MAAM,kBAAkB;AAAC;AAAA;AAG1C,MAAMC,MAAM,GAAG,MAAM;EAAA;EAClB,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,MAAMK,EAAE,GAAGC,QAAQ,CAACF,QAAQ,CAACG,QAAQ,CAACC,OAAO,CAAE,OAAO,EAAE,EAAE,CAAC,CAAC;EAC5D,MAAMC,OAAO,GAAGC,OAAO,CAAC,cAAc,CAAC;EACvC,MAAMC,OAAO,GAAG,IAAIF,OAAO,EAAE;EAG7B,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMiB,WAAW,GAAG,YAAY;IAC7B,IAAIC,IAAI,GAAG,EAAE;IACb,MAAMC,IAAI,GAAG,MAAMP,OAAO,CAACQ,KAAK,CAACC,KAAK,CAACf,EAAE,CAAC;IAC1CY,IAAI,CAACI,IAAI,CAACH,IAAI,CAAC;IACfL,SAAS,CAACI,IAAI,CAAC;EACjB,CAAC;EAEF,MAAMK,EAAE,GAAGZ,OAAO,CAAC,IAAI,CAAC;EACxB,MAAMa,UAAU,GAAI,mEAAkElB,EAAG,EAAC;EAE1F,MAAMmB,YAAY,GAAG,YAAY;IAC9BF,EAAE,CAACG,OAAO,CAACF,UAAU,EAAE,CAACG,GAAG,EAAEC,KAAK,KAAK;MACpCZ,UAAU,CAACY,KAAK,CAACC,MAAM,CAAC;IAC1B,CAAC,CAAC;EACN,CAAC;EAEDC,OAAO,CAACC,GAAG,CAAClB,MAAM,CAAC;EACnBiB,OAAO,CAACC,GAAG,CAACH,KAAK,CAACC,MAAM,CAAC;EAEzB9B,SAAS,CAAC,MAAM;IACbkB,WAAW,EAAE;IACbQ,YAAY,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACG;IAAA,wBACG;MAAA,UACIZ,MAAM,CAACmB,GAAG,CAAEC,OAAO,iBACjB,QAAC,SAAS;QAAC,OAAO,EAAEA;MAAQ;QAAA;QAAA;QAAA;MAAA,QAC9B;IAAC;MAAA;MAAA;MAAA;IAAA,QACC,eAEN;MAAA,UACIpB,MAAM,CAACmB,GAAG,CAAEC,OAAO,iBACjB,QAAC,UAAU;QAAC,OAAO,EAAEA;MAAQ;QAAA;QAAA;QAAA;MAAA,QAC/B;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA,gBACN;AAGT,CAAC;AAAA,GAlDK7B,MAAM;EAAA,QACQH,WAAW;AAAA;AAAA,KADzBG,MAAM;AAoDZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}