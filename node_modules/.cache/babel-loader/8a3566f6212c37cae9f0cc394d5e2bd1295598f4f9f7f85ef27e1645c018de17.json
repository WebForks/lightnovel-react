{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ethan Liu\\\\Desktop\\\\repos\\\\lightnovel-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport NovelWorld from \"./NovelWorld\";\nimport SearchIcon from \"./search.svg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [lightNovels, setLightNovels] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  let myFilter = {\n    format: \"NOVEL\"\n  };\n  const anilist = require('anilist-node');\n  const Anilist = new anilist();\n  const searchLightNovels = title => {\n    let shows = [];\n    const titles = String(title);\n    Anilist.searchEntry.manga(titles, myFilter).then(data => {\n      for (const i of data.media.map(item => item.id)) {\n        Anilist.media.manga(i).then(data => {\n          shows.push(data);\n        });\n      }\n      console.log(shows);\n      console.log(\"a\");\n    });\n    setLightNovels(shows);\n  };\n  useEffect(() => {\n    searchLightNovels();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NovelWorld\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search for Light Novels..\",\n        value: searchTerm,\n        onChange: e => {\n          setSearchTerm(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: SearchIcon,\n        alt: \"search-icon\",\n        onClick: () => searchLightNovels(searchTerm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this)\n\n  /*\r\n  <div className='Nav-Bar'>\r\n     <div className='home-page-logo'>\r\n        <button id='home-page'>Novel World</button>\r\n     </div>\r\n  \r\n     <div className=\"search\">\r\n        <input id='search-bar'\r\n           placeholder=\"Search for Light novels..\"\r\n           value={searchTerm}\r\n           onChange={(e) => {setSearchTerm(e.target.value)}}\r\n        />\r\n        <img src={SearchIcon} alt=\"search-icon\" onClick={() => searchLightNovels(searchTerm)} />\r\n     </div>\r\n       {\r\n        lightNovels?.length > 0 \r\n        ? (\r\n           <div className=\"container\">\r\n              {lightNovels.map((lightNovel) => (\r\n              <NovelWorld lightNovel={lightNovel} />\r\n              ))}\r\n           </div>\r\n        ) : (\r\n           <div className=\"empty\">\r\n              <h2>Light Novels not found</h2>\r\n           </div>\r\n        )\r\n     }\r\n  </div>\r\n  */;\n};\n_s(App, \"MxsjmXFms4IdToLI+4wNCvfLSuM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","NovelWorld","SearchIcon","App","lightNovels","setLightNovels","searchTerm","setSearchTerm","myFilter","format","anilist","require","Anilist","searchLightNovels","title","shows","titles","String","searchEntry","manga","then","data","i","media","map","item","id","push","console","log","e","target","value"],"sources":["C:/Users/Ethan Liu/Desktop/repos/lightnovel-react/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport NovelWorld from \"./NovelWorld\";\r\nimport SearchIcon from \"./search.svg\";\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n\r\n   const [lightNovels, setLightNovels] = useState([]);\r\n   const [searchTerm, setSearchTerm] = useState('')\r\n\r\n   let myFilter = {\r\n      format: \"NOVEL\"\r\n   }\r\n\r\n   const anilist = require('anilist-node');\r\n   const Anilist = new anilist();\r\n\r\n   const searchLightNovels = (title) => {\r\n      let shows = [];\r\n      const titles = String(title)\r\n      Anilist.searchEntry.manga(titles, myFilter).then(data => {\r\n          for (const i of data.media.map(item => item.id)){\r\n            Anilist.media.manga(i).then(data => {\r\n               shows.push(data)\r\n              })\r\n          }\r\n          console.log(shows)\r\n          console.log(\"a\")\r\n      })\r\n   \r\n      setLightNovels(shows)\r\n   }\r\n\r\n   useEffect(() => {\r\n      searchLightNovels();\r\n   }, []);\r\n\r\n   return (\r\n\r\n      <div className=\"app\">\r\n      <h1>NovelWorld</h1>\r\n\r\n      <div className=\"search\">\r\n        <input\r\n          placeholder=\"Search for Light Novels..\"\r\n          value={searchTerm}\r\n          onChange={(e) => {setSearchTerm(e.target.value)}}\r\n        />\r\n        <img src={SearchIcon} alt=\"search-icon\" onClick={() => searchLightNovels(searchTerm)} />\r\n      </div>\r\n      </div>\r\n\r\n      /*\r\n      <div className='Nav-Bar'>\r\n         <div className='home-page-logo'>\r\n            <button id='home-page'>Novel World</button>\r\n         </div>\r\n      \r\n         <div className=\"search\">\r\n            <input id='search-bar'\r\n               placeholder=\"Search for Light novels..\"\r\n               value={searchTerm}\r\n               onChange={(e) => {setSearchTerm(e.target.value)}}\r\n            />\r\n            <img src={SearchIcon} alt=\"search-icon\" onClick={() => searchLightNovels(searchTerm)} />\r\n         </div>\r\n\r\n         {\r\n            lightNovels?.length > 0 \r\n            ? (\r\n               <div className=\"container\">\r\n                  {lightNovels.map((lightNovel) => (\r\n                  <NovelWorld lightNovel={lightNovel} />\r\n                  ))}\r\n               </div>\r\n            ) : (\r\n               <div className=\"empty\">\r\n                  <h2>Light Novels not found</h2>\r\n               </div>\r\n            )\r\n         }\r\n    </div>\r\n    */\r\n\r\n   );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAO,WAAW;AAAC;AAEnB,MAAMC,GAAG,GAAG,MAAM;EAAA;EAEf,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhD,IAAIQ,QAAQ,GAAG;IACZC,MAAM,EAAE;EACX,CAAC;EAED,MAAMC,OAAO,GAAGC,OAAO,CAAC,cAAc,CAAC;EACvC,MAAMC,OAAO,GAAG,IAAIF,OAAO,EAAE;EAE7B,MAAMG,iBAAiB,GAAIC,KAAK,IAAK;IAClC,IAAIC,KAAK,GAAG,EAAE;IACd,MAAMC,MAAM,GAAGC,MAAM,CAACH,KAAK,CAAC;IAC5BF,OAAO,CAACM,WAAW,CAACC,KAAK,CAACH,MAAM,EAAER,QAAQ,CAAC,CAACY,IAAI,CAACC,IAAI,IAAI;MACrD,KAAK,MAAMC,CAAC,IAAID,IAAI,CAACE,KAAK,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,CAAC,EAAC;QAC9Cd,OAAO,CAACW,KAAK,CAACJ,KAAK,CAACG,CAAC,CAAC,CAACF,IAAI,CAACC,IAAI,IAAI;UACjCN,KAAK,CAACY,IAAI,CAACN,IAAI,CAAC;QACjB,CAAC,CAAC;MACN;MACAO,OAAO,CAACC,GAAG,CAACd,KAAK,CAAC;MAClBa,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IACpB,CAAC,CAAC;IAEFxB,cAAc,CAACU,KAAK,CAAC;EACxB,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACbc,iBAAiB,EAAE;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAEG;IAAK,SAAS,EAAC,KAAK;IAAA,wBACpB;MAAA,UAAI;IAAU;MAAA;MAAA;MAAA;IAAA,QAAK,eAEnB;MAAK,SAAS,EAAC,QAAQ;MAAA,wBACrB;QACE,WAAW,EAAC,2BAA2B;QACvC,KAAK,EAAEP,UAAW;QAClB,QAAQ,EAAGwB,CAAC,IAAK;UAACvB,aAAa,CAACuB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QACjD,eACF;QAAK,GAAG,EAAE9B,UAAW;QAAC,GAAG,EAAC,aAAa;QAAC,OAAO,EAAE,MAAMW,iBAAiB,CAACP,UAAU;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACpF;EAAA;IAAA;IAAA;IAAA;EAAA;;EAGN;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IA7BM;AAiCN,CAAC;AAAA,GAhFKH,GAAG;AAAA,KAAHA,GAAG;AAkFT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}